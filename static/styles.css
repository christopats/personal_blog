/* @import url("https://p.typekit.net/p.css?s=1&k=pmg0dmv&ht=tk&f=54660.54663.54664.54665&a=231592142&app=typekit&e=css"); */

:root {

    /* COLOUR */

    --color-bg-primary: #121c22;
    --color-bg-secondary: #151e26;
    --color-bg-tertiary: #0e1418;
    --color-text-primary: #ffffff;
    --color-text-secondary: #bdbdbf;
    --color-accent-base: #50f7d1;
    --color-accent-strong: #29886E;

    --color-global-bg: var(--color-bg-primary);
    --color-global-text: var(--color-text-primary);
    --color-heading1-text: var(--color-accent-base);
    --color-card-bg: var(--color-bg-secondary);


    /* FONT */

    --font-family: "figtree", sans-serif;

    --font-size--2: clamp(0.64rem, 0.7134rem + -0.0947vw, 0.6944rem);
    --font-size--1: clamp(0.8rem, 0.8449rem + -0.058vw, 0.8333rem);
    --font-size-0: clamp(1rem, 1rem + 0vw, 1rem);
    --font-size-1: clamp(1.2rem, 1.1826rem + 0.087vw, 1.25rem);
    --font-size-2: clamp(1.44rem, 1.3974rem + 0.213vw, 1.5625rem);
    --font-size-3: clamp(1.728rem, 1.6497rem + 0.3915vw, 1.9531rem);
    --font-size-4: clamp(2.0736rem, 1.9457rem + 0.6397vw, 2.4414rem);
    --font-size-5: clamp(2.4883rem, 2.2923rem + 0.9799vw, 3.0518rem);
    --font-size-6: clamp(2.986rem, 2.6977rem + 1.4412vw, 3.8147rem);

    --font-weight-black: 700;
    --font-weight-bold: 500;
    --font-weight-base: 400;

    --font-size-button: var(--font-size--1);
    --font-size-base: var(--font-size-0);
    --font-size-lede: var(--font-size--1);
    --font-size-heading1: var(--font-size-6);
    --font-size-heading2: var(--font-size-5);
    --font-size-heading3: var(--font-size-4);
    --font-size-heading4: var(--font-size-3);

    /* SPACING */

    --space-xs: clamp(0.75rem, 0.75rem + 0vw, 0.75rem);
    --space-s: clamp(1rem, 1rem + 0vw, 1rem);
    --space-m: clamp(1.5rem, 1.5rem + 0vw, 1.5rem);
    --space-l: clamp(2rem, 2rem + 0vw, 2rem);
    --space-xl: clamp(3rem, 3rem + 0vw, 3rem);
    --space-2xl: clamp(4rem, 4rem + 0vw, 4rem);
    --space-3xl: clamp(6rem, 6rem + 0vw, 6rem);
    --space-4xl: clamp(6rem, 6rem + 0vw, 6rem);

    --space-gutter: var(--space-m);
    --space-gutter-s: var(--space-s);
    --space-gutter-l: var(--space-l);
    --space-regions: var(--space-xl);
    --size-wrapper-max-width: 1135px;

    /* CORNER RADIUS */

    --corner-radius-large: 16px;
    --corner-radius-medium: 12px;
    --corner-radius-small: 8px;
    --corner-radius-xsmall: 4px;

    /* BREAKPOINTS */

    --breakpoint-small: 48em;
    --breakpoint-large: 64em;
}

/* // https://piccalil.li/blog/a-modern-css-reset */

/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Remove default margin */
* {
    margin: 0;
    padding: 0;
    font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
    list-style: none;
}

a {
    cursor: pointer;
}

/* Set core root defaults */
html:focus-within {
    scroll-behavior: smooth;
}

html,
body {
    height: 100%;
}

/* Set core body defaults */
body {
    text-rendering: optimizeSpeed;
    line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
    max-width: 100%;
    display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

#content {
    width: auto !important;
    height: auto !important;
}


/* COMPOSITION */

.flow>*+* {
    margin-top: var(--space-xs)
}

.flex {
    display: flex;
}



.container {
    --max-width: 1110px;
    --padding: 1rem;
    max-width: calc(min(var(--max-width), 100% - (var(--padding) * 2)));
    margin-inline: auto;
    display: grid;
    min-height: calc(100dvh - 80px);
    grid-template-rows: auto;
    align-content: center;
}

.grid_col_2 {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
}

.grid_col_flex {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));

}




body {
    font-family: var(--font-family);
    background-color: var(--color-bg-primary);
    color: var(--color-text-primary);

}

h1 {
    font-size: var(--font-size-heading1);
    color: var(--color-heading1-text);
    line-height: 1;
    font-weight: var(--font-weight-black);
}

h1~h2 {
    font-size: var(--font-size-heading1);
    color: var(--color-text-primary);
    line-height: 1;
    font-weight: var(--font-weight-black);
}

h1~p {
    font-size: var(--font-size-base);
    color: var(--color-text-primary);
}

p:has(+ h1) {
    font-size: var(--font-size-base);
    color: var(--color-text-secondary);
}

/* UTILITY CLASSES */

.gap-small {
    display: flex;
    gap: var(--space-s);
}


.navbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 1rem;
    position: relative;
}

.navbar .logo {
    height: 48px;
    width: auto;
    position: relative;
    z-index: 25;
}


.nav-items {
    flex-direction: column;
    position: absolute;
    right: 1rem;
    width: 100%;
    align-items: flex-end;
    justify-content: center;
    text-align: end;
    transition: 0.3s ease-in-out;
    z-index: 20;
}

.nav-items>* {
    margin-top: 1rem;
}

.open+.nav-items {
    display: flex;
}

.burger-menu {
    cursor: pointer;
    border: none;
    background-color: inherit;
    position: relative;
    z-index: 25;
}

.burger-line {
    background-color: var(--color-text-secondary);
    width: 30px;
    height: 3px;
    margin: 6px 0;
    transition: all 0.3s ease;
}

.line1 {
    transform: translateY(0) rotate(0);
}

.line2 {
    opacity: 1;
}

.line3 {
    transform: translateY(0) rotate(0);
}

.open .line1 {
    transform: translateY(9px) rotate(45deg);

}

.open .line2 {
    opacity: 0;
}

.open .line3 {
    transform: translateY(-9px) rotate(-45deg);
}

.open+.nav-items {
    display: flex;
}

.nav-items-desktop {
    display: none;
}

@media (min-width: 768px) {
    .burger-menu {
        display: none;
    }

    .nav-items-desktop {
        display: flex;
        flex-direction: row;
        position: static;
        width: auto;
        gap: 2rem;
        margin-top: 0;
    }


}

/* Background overlay to increase opacity when nav is open */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(18, 28, 34);
    opacity: 0;
    visibility: hidden;
    transition: all 0.15s ease;
    z-index: 15;
}

/* Show the overlay when nav is open */
.open~.overlay {
    opacity: 1;
    visibility: visible;
}

/* BUTTON */

.button {
    --button-padding: 0.7em 1.2em;
    --button-gap: 0.5em;
    --button-bg: var(--color-accent-base);
    --button-color: var(--color-bg-primary);
    --button-hover-color: var(--color-accent-strong);
    --button-hover-bg: var(--color-accent-strong);
    --button-border-width: 2px;
    --button-border-style: solid;
    --button-border-color: var(--color-accent-base);
    --button-radius: var(--corner-radius-xsmall);

    display: inline-flex;
    align-items: center;
    gap: var(--button-gap);
    padding: var(--button-padding);

    background-color: var(--button-bg);
    color: var(--button-color);

    border-width: var(--button-border-width);
    border-style: var(--button-border-style);
    border-color: var(--button-border-color);
    border-radius: var(--button-radius);

    text-decoration: none;
    font-weight: var(--button-font-weight, 400);
    font-size: var(--font-size--1);
    letter-spacing: 0.05ch;
    font-family: sans-serif;
    line-height: 1.1;

    cursor: pointer;
}

.button:hover {
    background-color: var(--button-hover-bg);
    border-color: var(--button-hover-color);
}

.button:active {
    background-color: var(--button-hover-bg);
    border-color: var(--button-hover-color);

}

.button[data-button-variant="ghost"] {
    --button-bg: transparent;
    --button-border-color: var(--color-accent-base);
    --button-color: var(--color-accent-base);
}

.button[data-button-variant="ghost"]:hover {
    background-color: var(--color-bg-tertiary);
    border-color: var(--color-text-secondary);
    color: var(--color-text-secondary);

}

.button[data-button-variant="anchor"] {
    position: relative;
    color: var(--color-text-secondary);
    background: none;
    border: none;
    cursor: pointer;
    outline: none;
    padding-inline: none;
}

.button[data-button-variant="anchor"]::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-accent-base);
    transition: 0.3s ease;
}


.button[data-button-variant="anchor"]:hover::after {
    color: var(--color-text-primary);
    width: 100%;
}

.flex~.button {
    gap: var(--space-m);
}